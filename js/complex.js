var Complex=function(e,t){this.real=e;this.im=t};var prototype=Complex.prototype={fromRect:function(e,t){this.real=e;this.im=t;return this},fromPolar:function(e,t){if(typeof e=="string"){var n=e.split(" ");e=n[0];t=n[1]}return this.fromRect(e*Math.cos(t),e*Math.sin(t))},toPrecision:function(e){return this.fromRect(this.real.toPrecision(e),this.im.toPrecision(e))},toFixed:function(e){return this.fromRect(this.real.toFixed(e),this.im.toFixed(e))},finalize:function(){this.fromRect=function(e,t){return new Complex(e,t)};if(Object.defineProperty){Object.defineProperty(this,"real",{writable:false,value:this.real});Object.defineProperty(this,"im",{writable:false,value:this.im})}return this},magnitude:function(){var e=this.real,t=this.im;return Math.sqrt(e*e+t*t)},angle:function(){return Math.atan2(this.im,this.real)},conjugate:function(){return this.fromRect(this.real,-this.im)},negate:function(){return this.fromRect(-this.real,-this.im)},multiply:function(e){e=Complex.from(e);var t=this.real,n=this.im;return this.fromRect(e.real*t-e.im*n,n*e.real+e.im*t)},divide:function(e){e=Complex.from(e);var t=Math.pow(e.real,2)+Math.pow(e.im,2),n=this.real,r=this.im;return this.fromRect((n*e.real+r*e.im)/t,(r*e.real-n*e.im)/t)},add:function(e){e=Complex.from(e);return this.fromRect(this.real+e.real,this.im+e.im)},subtract:function(e){e=Complex.from(e);return this.fromRect(this.real-e.real,this.im-e.im)},pow:function(e){e=Complex.from(e);var t=e.multiply(this.clone().log()).exp();return this.fromRect(t.real,t.im)},sqrt:function(){var e=this.magnitude(),t=this.im<0?-1:1;return this.fromRect(Math.sqrt((e+this.real)/2),t*Math.sqrt((e-this.real)/2))},log:function(e){if(!e)e=0;return this.fromRect(Math.log(this.magnitude()),this.angle()+e*2*Math.PI)},exp:function(){return this.fromPolar(Math.exp(this.real),this.im)},sin:function(){var e=this.real,t=this.im;return this.fromRect(Math.sin(e)*cosh(t),Math.cos(e)*sinh(t))},cos:function(){var e=this.real,t=this.im;return this.fromRect(Math.cos(e)*cosh(t),Math.sin(e)*sinh(t)*-1)},tan:function(){var e=this.real,t=this.im,n=Math.cos(2*e)+cosh(2*t);return this.fromRect(Math.sin(2*e)/n,sinh(2*t)/n)},sinh:function(){var e=this.real,t=this.im;return this.fromRect(sinh(e)*Math.cos(t),cosh(e)*Math.sin(t))},cosh:function(){var e=this.real,t=this.im;return this.fromRect(cosh(e)*Math.cos(t),sinh(e)*Math.sin(t))},tanh:function(){var e=this.real,t=this.im,n=cosh(2*e)+Math.cos(2*t);return this.fromRect(sinh(2*e)/n,Math.sin(2*t)/n)},clone:function(){return new Complex(this.real,this.im)},toString:function(e){if(e)return this.magnitude()+" "+this.angle();var t="",n=this.real,r=this.im;if(n)t+=n;if(n&&r||r<0)t+=r<0?"-":"+";if(r){var i=Math.abs(r);if(i!=1)t+=i;t+="i"}return t||"0"},equals:function(e){e=Complex.from(e);return e.real==this.real&&e.im==this.im}};var alias={abs:"magnitude",arg:"angle",phase:"angle",conj:"conjugate",mult:"multiply",dev:"divide",sub:"subtract"};for(var a in alias)prototype[a]=prototype[alias[a]];var extend={from:function(e,t){if(e instanceof Complex)return new Complex(e.real,e.im);var n=typeof e;if(n=="string"){if(e=="i")e="0+1i";var r=e.match(/(\d+)?([\+\-]\d*)[ij]/);if(r){e=r[1];t=r[2]=="+"||r[2]=="-"?r[2]+"1":r[2]}}e=+e;t=+t;return new Complex(isNaN(e)?0:e,isNaN(t)?0:t)},fromPolar:function(e,t){return(new Complex(1,1)).fromPolar(e,t)},i:(new Complex(0,1)).finalize(),one:(new Complex(1,0)).finalize()};for(var e in extend)Complex[e]=extend[e];var sinh=function(e){return(Math.pow(Math.E,e)-Math.pow(Math.E,-e))/2};var cosh=function(e){return(Math.pow(Math.E,e)+Math.pow(Math.E,-e))/2};